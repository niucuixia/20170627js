// 以下是数组去重的四种方法：

1、Array.prototype.unique1 = function() {

    var n = []; //一个新的临时数组

    for (var i = 0; i < this.length; i++) //遍历当前数组

    {

        //如果当前数组的第i已经保存进了临时数组，那么跳过，

        //否则把当前项push到临时数组里面

        if (n.indexOf(this[i]) == -1) n.push(this[i]);

    }

    return n;

}

2、Array.prototype.unique2 = function()

{

    var n = {},
        r = []; //n为hash表，r为临时数组

    for (var i = 0; i < this.length; i++) { //遍历当前数组

        if (!n[this[i]]) { //如果hash表中没有当前项

            n[this[i]] = true; //存入hash表

            r.push(this[i]); //把当前数组的当前项push到临时数组里面

        }

    }
    return r;

}



3、Array.prototype.unique3 = function(){

    var n = [this[0]]; //结果数组

    for (var i = 1; i < this.length; i++) //从第二项开始遍历

    {

        //如果当前数组的第i项在当前数组中第一次出现的位置不是i，

        //那么表示第i项是重复的，忽略掉。否则存入结果数组

        if (this.indexOf(this[i]) == i) n.push(this[i]);

    }

    return n;

}


4、//ES6新增的Set数据结构，类似于数组，但是里面的元素都是唯一的 ，其构造函数可以接受一个数组作为参数
//let arr=[1,2,1,2,6,3,5,69,66,7,2,1,4,3,6,8,9663,8]
//let set = new Set(array);
//{1,2,6,3,5,69,66,7,4,8,9663}
//ES6中Array新增了一个静态方法from，可以把类似数组的对象转换为数组
//Array.from(set)
//[1,2,6,3,5,69,66,7,4,8,9663]
function removeRepeatArray(arr){
    return Array.from(new Set(arr))
}
